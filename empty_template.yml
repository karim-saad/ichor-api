AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Ichor API

Globals:
  Function:
    Handler: app.handler
    Runtime: python3.8
    Timeout: 120

Resources:
  ApiDeployment:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Auth:
        DefaultAuthorizer: LambdaTokenAuthorizer
        Authorizers:
          LambdaTokenAuthorizer:
            FunctionArn: !GetAtt AuthFunction.Arn

  GeneralUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: GeneralUserPool
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: true
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: email
          Required: true
          Mutable: false
          AttributeDataType: String
        - Name: name
          Required: true
          Mutable: true
          AttributeDataType: String
      MfaConfiguration: OPTIONAL
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      EmailVerificationSubject: Ichor Jewellery - Verification Code

  AdministratorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: administrator-role
      Description: Administrator role to be used internally
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: auth
      FunctionName: auth
      Environment:
        Variables:
          AUTH_TOKEN: !Ref AuthToken
          PRINCIPAL_ID: !GetAtt AdministratorRole.Arn

  ProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: products
      FunctionName: products
      Events:
        GetProducts:
          Type: Api
          Properties:
            Path: /products
            Method: get
            RestApiId: !Ref ApiDeployment
      Policies:
        - DynamoDBReadPolicy: { TableName: products }

  CollectionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: collections
      FunctionName: collections
      Events:
        GetCollections:
          Type: Api
          Properties:
            Path: /collections
            Method: get
            RestApiId: !Ref ApiDeployment
      Policies:
        - DynamoDBReadPolicy: { TableName: collections }

  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: products
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: handle
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: handle
          KeySchema:
            - AttributeName: handle
              KeyType: HASH
          Projection:
            ProjectionType: "ALL"

  CollectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: collections
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: handle
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: handle
          KeySchema:
            - AttributeName: handle
              KeyType: HASH
          Projection:
            ProjectionType: "ALL"

  CollectionsProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: collections_products
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: collection_id
          AttributeType: S
      KeySchema:
        - AttributeName: collection_id
          KeyType: HASH
